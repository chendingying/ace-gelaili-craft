<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ace.product.mapper.ProcessMapper">

    <!--  模糊查询工艺型号-->
    <select id="selectProcessU9Conding" resultType="java.util.HashMap">
        select pro.u9_coding as u9Coding,pro.product_model as productModel from product_process pro
        where version = (select max(version) from product_process where isnumeric(version)=1 and u9_coding = pro.u9_coding)
        <if test="u9Coding != null"></if>
        and u9_coding like '%'+#{u9Coding, jdbcType=VARCHAR}+ '%'
    </select>

    <!-- 查询工艺信息 -->
    <select id="selectProcessForMaxVersion" resultType="java.util.HashMap">
        select pro.status as status, pro.id as id,pro.u9_coding as u9Coding,pro.product_model as productModel,pro.customer,pro.version,pro.file_coding as fileCoding,pro.box_number as boxNumber,pro.case_number as caseNumber from product_process pro
        where pro.version = (select max(version) from product_process where isnumeric(version)=1 and u9_coding = pro.u9_coding)
        <if test="u9Coding != null">
            and pro.u9_coding LIKE '%' + #{u9Coding, jdbcType=VARCHAR} + '%'
        </if>
        <if test="customer != null">
            and pro.customer LIKE '%' + #{customer, jdbcType=VARCHAR} + '%'
        </if>
        <if test="status != null">
            and pro.status = #{status,jdbcType=INTEGER}
        </if>
    </select>

    <!-- u9Coding编码查询最新版本 -->
    <select id="selectMaxVersionForU9Coding" resultType="java.lang.String">
        select max(version) version from product_process where isnumeric(version)=1 and u9_coding = #{u9Coding, jdbcType=VARCHAR}
        <if test="id != null">
            and id != #{id,jdbcType=INTEGER}
        </if>
    </select>

    <!--批量作废 -->
    <update id="updateInvalid" parameterType="java.util.List">
        <if test="list !=null and list.size > 0">
        update product_process
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="status =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                   when id=#{item.id} then #{item.status}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
        </if>
    </update>


    <update id="updateRegainVersion">
        update product_process set status = 1
          where u9_coding = #{u9Coding, jdbcType=VARCHAR}  and  version = #{version, jdbcType=VARCHAR}
    </update>

    <update id="updateInvalidVersion">
      update product_process set status = 0 where id = #{id,jdbcType=INTEGER} and u9_coding = #{u9Coding, jdbcType=VARCHAR}
    </update>

    <!--批量添加 -->
    <insert id="insertProcessList" parameterType="java.util.List"  useGeneratedKeys="true">
        INSERT INTO product_process(u9_coding,product_model,customer,version,file_coding,issue_date,update_date,spraying_color,steel_seal,move_seal,pof_plastic_products,box_plastic,case_plastic,box1_label,box1_num,box2_label,box2_num,case1_label,case1_num,case2_label,case2_num,instructions,qualified_certificate,sealing_paste,packaging_tape,packaging_tape_number,sealing_gummed_paper,process1_picture_name,process2_picture_name,process3_picture_name,process4_picture_name)
        values
        <foreach collection="list" item="params" index="index"
                 separator=",">
            (
            #{params.u9Coding,jdbcType=VARCHAR},
            #{params.productModel,jdbcType=VARCHAR},
            #{params.customer,jdbcType=VARCHAR},
            #{params.version,jdbcType=VARCHAR},
            #{params.fileCoding,jdbcType=VARCHAR},
            #{params.issueDate,jdbcType=DATE},
            #{params.updateDate,jdbcType=DATE},
            #{params.sprayingColor,jdbcType=VARCHAR},
            #{params.steelSeal,jdbcType=VARCHAR},
            #{params.moveSeal,jdbcType=VARCHAR},
            #{params.pofPlasticProducts,jdbcType=VARCHAR},
            #{params.boxPlastic,jdbcType=VARCHAR},
            #{params.casePlastic,jdbcType=VARCHAR},
            #{params.box1Label,jdbcType=VARCHAR},
            #{params.box1Num,jdbcType=INTEGER},
            #{params.box2Label,jdbcType=VARCHAR},
            #{params.box2Num,jdbcType=INTEGER},
            #{params.case1Label,jdbcType=VARCHAR},
            #{params.case1Num,jdbcType=INTEGER},
            #{params.case2Label,jdbcType=VARCHAR},
            #{params.case2Num,jdbcType=INTEGER},
            #{params.instructions,jdbcType=VARCHAR},
            #{params.qualifiedCertificate,jdbcType=VARCHAR},
            #{params.sealingPaste,jdbcType=VARCHAR},
            #{params.packagingTape,jdbcType=VARCHAR},
            #{params.packagingTapeNumber,jdbcType=INTEGER},
            #{params.sealingGummedPaper,jdbcType=VARCHAR},
            #{params.process1PictureName,jdbcType=VARCHAR},
            #{params.process2PictureName,jdbcType=VARCHAR},
            #{params.process3PictureName,jdbcType=VARCHAR},
            #{params.process4PictureName,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
</mapper>